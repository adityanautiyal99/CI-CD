# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage : first
  displayName: cloning spring3hibernate
  jobs:
  - job: 'cloning'
    steps:
    - bash: git clone https://github.com/opstree/spring3hibernate.git
    - bash: cd spring3hibernate && ls
    - task: Maven@3
      inputs:
        mavenPomFile: 'spring3hibernate/pom.xml'
        goals: 'clean compile'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: Maven@3
      inputs:
        mavenPomFile: 'spring3hibernate/pom.xml'
        goals: 'test'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: Maven@3
      inputs:
        mavenPomFile: 'spring3hibernate/pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
        checkStyleRunAnalysis: true
        findBugsRunAnalysis: true
        
    - bash: cd spring3hibernate/target && ls

    - publish: spring3hibernate/target/*.war
      artifact: spring3hibernate
    
  # - job: 'cleaning'
  #   steps:
  #   - bash: ls

# - stage: secound
#   jobs:
#   - job: check
#     steps:
#     - bash: ls